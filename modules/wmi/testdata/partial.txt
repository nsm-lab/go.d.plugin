# HELP go_gc_duration_seconds A summary of the GC invocation durations.
# TYPE go_gc_duration_seconds summary
go_gc_duration_seconds{quantile="0"} 0
go_gc_duration_seconds{quantile="0.25"} 0
go_gc_duration_seconds{quantile="0.5"} 0
go_gc_duration_seconds{quantile="0.75"} 0
go_gc_duration_seconds{quantile="1"} 0.0012211
go_gc_duration_seconds_sum 0.0024142
go_gc_duration_seconds_count 17
# HELP go_goroutines Number of goroutines that currently exist.
# TYPE go_goroutines gauge
go_goroutines 10
# HELP go_memstats_alloc_bytes Number of bytes allocated and still in use.
# TYPE go_memstats_alloc_bytes gauge
go_memstats_alloc_bytes 2.80492e+06
# HELP go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed.
# TYPE go_memstats_alloc_bytes_total counter
go_memstats_alloc_bytes_total 4.6825072e+07
# HELP go_memstats_buck_hash_sys_bytes Number of bytes used by the profiling bucket hash table.
# TYPE go_memstats_buck_hash_sys_bytes gauge
go_memstats_buck_hash_sys_bytes 728412
# HELP go_memstats_frees_total Total number of frees.
# TYPE go_memstats_frees_total counter
go_memstats_frees_total 302499
# HELP go_memstats_gc_sys_bytes Number of bytes used for garbage collection system metadata.
# TYPE go_memstats_gc_sys_bytes gauge
go_memstats_gc_sys_bytes 739328
# HELP go_memstats_heap_alloc_bytes Number of heap bytes allocated and still in use.
# TYPE go_memstats_heap_alloc_bytes gauge
go_memstats_heap_alloc_bytes 2.80492e+06
# HELP go_memstats_heap_idle_bytes Number of heap bytes waiting to be used.
# TYPE go_memstats_heap_idle_bytes gauge
go_memstats_heap_idle_bytes 3.514368e+06
# HELP go_memstats_heap_inuse_bytes Number of heap bytes that are in use.
# TYPE go_memstats_heap_inuse_bytes gauge
go_memstats_heap_inuse_bytes 4.612096e+06
# HELP go_memstats_heap_objects Number of allocated objects.
# TYPE go_memstats_heap_objects gauge
go_memstats_heap_objects 13359
# HELP go_memstats_heap_released_bytes_total Total number of heap bytes released to OS.
# TYPE go_memstats_heap_released_bytes_total counter
go_memstats_heap_released_bytes_total 385024
# HELP go_memstats_heap_sys_bytes Number of heap bytes obtained from system.
# TYPE go_memstats_heap_sys_bytes gauge
go_memstats_heap_sys_bytes 8.126464e+06
# HELP go_memstats_last_gc_time_seconds Number of seconds since 1970 of last garbage collection.
# TYPE go_memstats_last_gc_time_seconds gauge
go_memstats_last_gc_time_seconds 1.578049739707969e+09
# HELP go_memstats_lookups_total Total number of pointer lookups.
# TYPE go_memstats_lookups_total counter
go_memstats_lookups_total 0
# HELP go_memstats_mallocs_total Total number of mallocs.
# TYPE go_memstats_mallocs_total counter
go_memstats_mallocs_total 315858
# HELP go_memstats_mcache_inuse_bytes Number of bytes in use by mcache structures.
# TYPE go_memstats_mcache_inuse_bytes gauge
go_memstats_mcache_inuse_bytes 3440
# HELP go_memstats_mcache_sys_bytes Number of bytes used for mcache structures obtained from system.
# TYPE go_memstats_mcache_sys_bytes gauge
go_memstats_mcache_sys_bytes 16384
# HELP go_memstats_mspan_inuse_bytes Number of bytes in use by mspan structures.
# TYPE go_memstats_mspan_inuse_bytes gauge
go_memstats_mspan_inuse_bytes 35376
# HELP go_memstats_mspan_sys_bytes Number of bytes used for mspan structures obtained from system.
# TYPE go_memstats_mspan_sys_bytes gauge
go_memstats_mspan_sys_bytes 49152
# HELP go_memstats_next_gc_bytes Number of heap bytes when next garbage collection will take place.
# TYPE go_memstats_next_gc_bytes gauge
go_memstats_next_gc_bytes 4.685248e+06
# HELP go_memstats_other_sys_bytes Number of bytes used for other system allocations.
# TYPE go_memstats_other_sys_bytes gauge
go_memstats_other_sys_bytes 1.287968e+06
# HELP go_memstats_stack_inuse_bytes Number of bytes in use by the stack allocator.
# TYPE go_memstats_stack_inuse_bytes gauge
go_memstats_stack_inuse_bytes 262144
# HELP go_memstats_stack_sys_bytes Number of bytes obtained from system for stack allocator.
# TYPE go_memstats_stack_sys_bytes gauge
go_memstats_stack_sys_bytes 262144
# HELP go_memstats_sys_bytes Number of bytes obtained by system. Sum of all system allocations.
# TYPE go_memstats_sys_bytes gauge
go_memstats_sys_bytes 1.1209852e+07
# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
# TYPE process_start_time_seconds counter
process_start_time_seconds 1.578049732e+09
# HELP wmi_cpu_clock_interrupts_total Total number of received and serviced clock tick interrupts
# TYPE wmi_cpu_clock_interrupts_total counter
wmi_cpu_clock_interrupts_total{core="0,0"} 865485
wmi_cpu_clock_interrupts_total{core="0,1"} 865149
wmi_cpu_clock_interrupts_total{core="0,2"} 865055
wmi_cpu_clock_interrupts_total{core="0,3"} 864517
# HELP wmi_cpu_core_frequency_mhz Core frequency in megahertz
# TYPE wmi_cpu_core_frequency_mhz gauge
wmi_cpu_core_frequency_mhz{core="0,0"} 2195
wmi_cpu_core_frequency_mhz{core="0,1"} 2195
wmi_cpu_core_frequency_mhz{core="0,2"} 2195
wmi_cpu_core_frequency_mhz{core="0,3"} 2195
# HELP wmi_cpu_cstate_seconds_total Time spent in low-power idle state
# TYPE wmi_cpu_cstate_seconds_total counter
wmi_cpu_cstate_seconds_total{core="0,0",state="c1"} 9996.822630499999
wmi_cpu_cstate_seconds_total{core="0,0",state="c2"} 0
wmi_cpu_cstate_seconds_total{core="0,0",state="c3"} 0
wmi_cpu_cstate_seconds_total{core="0,1",state="c1"} 8774.705585
wmi_cpu_cstate_seconds_total{core="0,1",state="c2"} 0
wmi_cpu_cstate_seconds_total{core="0,1",state="c3"} 0
wmi_cpu_cstate_seconds_total{core="0,2",state="c1"} 9941.251291999999
wmi_cpu_cstate_seconds_total{core="0,2",state="c2"} 0
wmi_cpu_cstate_seconds_total{core="0,2",state="c3"} 0
wmi_cpu_cstate_seconds_total{core="0,3",state="c1"} 9453.105773399999
wmi_cpu_cstate_seconds_total{core="0,3",state="c2"} 0
wmi_cpu_cstate_seconds_total{core="0,3",state="c3"} 0
# HELP wmi_cpu_dpcs_total Total number of received and serviced deferred procedure calls (DPCs)
# TYPE wmi_cpu_dpcs_total counter
wmi_cpu_dpcs_total{core="0,0"} 119284
wmi_cpu_dpcs_total{core="0,1"} 306334
wmi_cpu_dpcs_total{core="0,2"} 185430
wmi_cpu_dpcs_total{core="0,3"} 211020
# HELP wmi_cpu_idle_break_events_total Total number of time processor was woken from idle
# TYPE wmi_cpu_idle_break_events_total counter
wmi_cpu_idle_break_events_total{core="0,0"} 1.5237428e+07
wmi_cpu_idle_break_events_total{core="0,1"} 1.766724e+06
wmi_cpu_idle_break_events_total{core="0,2"} 1.772391e+06
wmi_cpu_idle_break_events_total{core="0,3"} 2.041106e+06
# HELP wmi_cpu_interrupts_total Total number of received and serviced hardware interrupts
# TYPE wmi_cpu_interrupts_total counter
wmi_cpu_interrupts_total{core="0,0"} 1.7693361e+07
wmi_cpu_interrupts_total{core="0,1"} 2.346399e+06
wmi_cpu_interrupts_total{core="0,2"} 2.21262e+06
wmi_cpu_interrupts_total{core="0,3"} 2.611467e+06
# HELP wmi_cpu_parking_status Parking Status represents whether a processor is parked or not
# TYPE wmi_cpu_parking_status gauge
wmi_cpu_parking_status{core="0,0"} 0
wmi_cpu_parking_status{core="0,1"} 0
wmi_cpu_parking_status{core="0,2"} 0
wmi_cpu_parking_status{core="0,3"} 0
# HELP wmi_cpu_processor_performance Processor Performance is the average performance of the processor while it is executing instructions, as a percentage of the nominal performance of the processor. On some processors, Processor Performance may exceed 100%
# TYPE wmi_cpu_processor_performance gauge
wmi_cpu_processor_performance{core="0,0"} 3.9942315475e+10
wmi_cpu_processor_performance{core="0,1"} 1.163246295e+11
wmi_cpu_processor_performance{core="0,2"} 4.3415524418e+10
wmi_cpu_processor_performance{core="0,3"} 7.3924619412e+10
# HELP wmi_cpu_time_total Time that processor spent in different modes (idle, user, system, ...)
# TYPE wmi_cpu_time_total counter
wmi_cpu_time_total{core="0,0",mode="dpc"} 2.375
wmi_cpu_time_total{core="0,0",mode="idle"} 10181.359375
wmi_cpu_time_total{core="0,0",mode="interrupt"} 1.84375
wmi_cpu_time_total{core="0,0",mode="privileged"} 185.484375
wmi_cpu_time_total{core="0,0",mode="user"} 269.03125
wmi_cpu_time_total{core="0,1",mode="dpc"} 20.0625
wmi_cpu_time_total{core="0,1",mode="idle"} 8831.375
wmi_cpu_time_total{core="0,1",mode="interrupt"} 6.109375
wmi_cpu_time_total{core="0,1",mode="privileged"} 861.703125
wmi_cpu_time_total{core="0,1",mode="user"} 942.796875
wmi_cpu_time_total{core="0,2",mode="dpc"} 12.625
wmi_cpu_time_total{core="0,2",mode="idle"} 9998.625
wmi_cpu_time_total{core="0,2",mode="interrupt"} 11.0625
wmi_cpu_time_total{core="0,2",mode="privileged"} 297.359375
wmi_cpu_time_total{core="0,2",mode="user"} 339.890625
wmi_cpu_time_total{core="0,3",mode="dpc"} 13.78125
wmi_cpu_time_total{core="0,3",mode="idle"} 9463.03125
wmi_cpu_time_total{core="0,3",mode="interrupt"} 105.625
wmi_cpu_time_total{core="0,3",mode="privileged"} 411.40625
wmi_cpu_time_total{core="0,3",mode="user"} 761.4375
# HELP wmi_exporter_build_info A metric with a constant '1' value labeled by version, revision, branch, and goversion from which wmi_exporter was built.
# TYPE wmi_exporter_build_info gauge
wmi_exporter_build_info{branch="master",goversion="go1.12.3",revision="012b938b5451e5d10e2bb364876aac66cd85c54e",version="0.9.0"} 1
# HELP wmi_exporter_collector_duration_seconds wmi_exporter: Duration of a collection.
# TYPE wmi_exporter_collector_duration_seconds gauge
wmi_exporter_collector_duration_seconds{collector="cpu"} 0
wmi_exporter_collector_duration_seconds{collector="memory"} 0
wmi_exporter_collector_duration_seconds{collector="os"} 0.044299
# HELP wmi_exporter_collector_success wmi_exporter: Whether the collector was successful.
# TYPE wmi_exporter_collector_success gauge
wmi_exporter_collector_success{collector="cpu"} 1
wmi_exporter_collector_success{collector="memory"} 1
wmi_exporter_collector_success{collector="os"} 1
# HELP wmi_exporter_collector_timeout wmi_exporter: Whether the collector timed out.
# TYPE wmi_exporter_collector_timeout gauge
wmi_exporter_collector_timeout{collector="cpu"} 0
wmi_exporter_collector_timeout{collector="memory"} 0
wmi_exporter_collector_timeout{collector="os"} 0
# HELP wmi_exporter_perflib_snapshot_duration_seconds Duration of perflib snapshot capture
# TYPE wmi_exporter_perflib_snapshot_duration_seconds gauge
wmi_exporter_perflib_snapshot_duration_seconds 0.0539396
# HELP wmi_memory_available_bytes The amount of physical memory immediately available for allocation to a process or for system use. It is equal to the sum of memory assigned to the standby (cached), free and zero page lists (AvailableBytes)
# TYPE wmi_memory_available_bytes gauge
wmi_memory_available_bytes 2.337222656e+09
# HELP wmi_memory_cache_bytes (CacheBytes)
# TYPE wmi_memory_cache_bytes gauge
wmi_memory_cache_bytes 1.28589824e+08
# HELP wmi_memory_cache_bytes_peak (CacheBytesPeak)
# TYPE wmi_memory_cache_bytes_peak gauge
wmi_memory_cache_bytes_peak 1.95198976e+08
# HELP wmi_memory_cache_faults_total (CacheFaultsPersec)
# TYPE wmi_memory_cache_faults_total gauge
wmi_memory_cache_faults_total 7.675068e+06
# HELP wmi_memory_commit_limit (CommitLimit)
# TYPE wmi_memory_commit_limit gauge
wmi_memory_commit_limit 5.770891264e+09
# HELP wmi_memory_committed_bytes (CommittedBytes)
# TYPE wmi_memory_committed_bytes gauge
wmi_memory_committed_bytes 2.006388736e+09
# HELP wmi_memory_demand_zero_faults_total The number of zeroed pages required to satisfy faults. Zeroed pages, pages emptied of previously stored data and filled with zeros, are a security feature of Windows that prevent processes from seeing data stored by earlier processes that used the memory space (DemandZeroFaults)
# TYPE wmi_memory_demand_zero_faults_total gauge
wmi_memory_demand_zero_faults_total 6.882552e+06
# HELP wmi_memory_free_and_zero_page_list_bytes (FreeAndZeroPageListBytes)
# TYPE wmi_memory_free_and_zero_page_list_bytes gauge
wmi_memory_free_and_zero_page_list_bytes 3.04807936e+08
# HELP wmi_memory_free_system_page_table_entries (FreeSystemPageTableEntries)
# TYPE wmi_memory_free_system_page_table_entries gauge
wmi_memory_free_system_page_table_entries 1.2558411e+07
# HELP wmi_memory_modified_page_list_bytes (ModifiedPageListBytes)
# TYPE wmi_memory_modified_page_list_bytes gauge
wmi_memory_modified_page_list_bytes 2.0496384e+07
# HELP wmi_memory_page_faults_total (PageFaultsPersec)
# TYPE wmi_memory_page_faults_total gauge
wmi_memory_page_faults_total 1.8061429e+07
# HELP wmi_memory_pool_nonpaged_allocs_total The number of calls to allocate space in the nonpaged pool. The nonpaged pool is an area of system memory area for objects that cannot be written to disk, and must remain in physical memory as long as they are allocated (PoolNonpagedAllocs)
# TYPE wmi_memory_pool_nonpaged_allocs_total gauge
wmi_memory_pool_nonpaged_allocs_total 0
# HELP wmi_memory_pool_nonpaged_bytes_total (PoolNonpagedBytes)
# TYPE wmi_memory_pool_nonpaged_bytes_total gauge
wmi_memory_pool_nonpaged_bytes_total 1.64827136e+08
# HELP wmi_memory_pool_paged_allocs_total (PoolPagedAllocs)
# TYPE wmi_memory_pool_paged_allocs_total gauge
wmi_memory_pool_paged_allocs_total 0
# HELP wmi_memory_pool_paged_bytes (PoolPagedBytes)
# TYPE wmi_memory_pool_paged_bytes gauge
wmi_memory_pool_paged_bytes 3.72215808e+08
# HELP wmi_memory_pool_paged_resident_bytes (PoolPagedResidentBytes)
# TYPE wmi_memory_pool_paged_resident_bytes gauge
wmi_memory_pool_paged_resident_bytes 3.59211008e+08
# HELP wmi_memory_standby_cache_core_bytes (StandbyCacheCoreBytes)
# TYPE wmi_memory_standby_cache_core_bytes gauge
wmi_memory_standby_cache_core_bytes 1.65449728e+08
# HELP wmi_memory_standby_cache_normal_priority_bytes (StandbyCacheNormalPriorityBytes)
# TYPE wmi_memory_standby_cache_normal_priority_bytes gauge
wmi_memory_standby_cache_normal_priority_bytes 6.00199168e+08
# HELP wmi_memory_standby_cache_reserve_bytes (StandbyCacheReserveBytes)
# TYPE wmi_memory_standby_cache_reserve_bytes gauge
wmi_memory_standby_cache_reserve_bytes 1.266765824e+09
# HELP wmi_memory_swap_page_operations_total Total number of swap page read and writes (PagesPersec)
# TYPE wmi_memory_swap_page_operations_total gauge
wmi_memory_swap_page_operations_total 5.39697e+06
# HELP wmi_memory_swap_page_reads_total Number of disk page reads (a single read operation reading several pages is still only counted once) (PageReadsPersec)
# TYPE wmi_memory_swap_page_reads_total gauge
wmi_memory_swap_page_reads_total 676801
# HELP wmi_memory_swap_page_writes_total Number of disk page writes (a single write operation writing several pages is still only counted once) (PageWritesPersec)
# TYPE wmi_memory_swap_page_writes_total gauge
wmi_memory_swap_page_writes_total 804
# HELP wmi_memory_swap_pages_read_total Number of pages read across all page reads (ie counting all pages read even if they are read in a single operation) (PagesInputPersec)
# TYPE wmi_memory_swap_pages_read_total gauge
wmi_memory_swap_pages_read_total 5.368093e+06
# HELP wmi_memory_swap_pages_written_total Number of pages written across all page writes (ie counting all pages written even if they are written in a single operation) (PagesOutputPersec)
# TYPE wmi_memory_swap_pages_written_total gauge
wmi_memory_swap_pages_written_total 28877
# HELP wmi_memory_system_cache_resident_bytes (SystemCacheResidentBytes)
# TYPE wmi_memory_system_cache_resident_bytes gauge
wmi_memory_system_cache_resident_bytes 1.28589824e+08
# HELP wmi_memory_system_code_resident_bytes (SystemCodeResidentBytes)
# TYPE wmi_memory_system_code_resident_bytes gauge
wmi_memory_system_code_resident_bytes 0
# HELP wmi_memory_system_code_total_bytes (SystemCodeTotalBytes)
# TYPE wmi_memory_system_code_total_bytes gauge
wmi_memory_system_code_total_bytes 0
# HELP wmi_memory_system_driver_resident_bytes (SystemDriverResidentBytes)
# TYPE wmi_memory_system_driver_resident_bytes gauge
wmi_memory_system_driver_resident_bytes 9.486336e+06
# HELP wmi_memory_system_driver_total_bytes (SystemDriverTotalBytes)
# TYPE wmi_memory_system_driver_total_bytes gauge
wmi_memory_system_driver_total_bytes 1.6224256e+07
# HELP wmi_memory_transition_faults_total (TransitionFaultsPersec)
# TYPE wmi_memory_transition_faults_total gauge
wmi_memory_transition_faults_total 5.279307e+06
# HELP wmi_memory_transition_pages_repurposed_total (TransitionPagesRePurposedPersec)
# TYPE wmi_memory_transition_pages_repurposed_total gauge
wmi_memory_transition_pages_repurposed_total 2.163369e+06
# HELP wmi_memory_write_copies_total The number of page faults caused by attempting to write that were satisfied by copying the page from elsewhere in physical memory (WriteCopiesPersec)
# TYPE wmi_memory_write_copies_total gauge
wmi_memory_write_copies_total 166632
# HELP wmi_os_paging_free_bytes OperatingSystem.FreeSpaceInPagingFiles
# TYPE wmi_os_paging_free_bytes gauge
wmi_os_paging_free_bytes 1.44535552e+09
# HELP wmi_os_paging_limit_bytes OperatingSystem.SizeStoredInPagingFiles
# TYPE wmi_os_paging_limit_bytes gauge
wmi_os_paging_limit_bytes 1.476395008e+09
# HELP wmi_os_physical_memory_free_bytes OperatingSystem.FreePhysicalMemory
# TYPE wmi_os_physical_memory_free_bytes gauge
wmi_os_physical_memory_free_bytes 2.335821824e+09
# HELP wmi_os_process_memory_limix_bytes OperatingSystem.MaxProcessMemorySize
# TYPE wmi_os_process_memory_limix_bytes gauge
wmi_os_process_memory_limix_bytes 1.40737488224256e+14
# HELP wmi_os_processes OperatingSystem.NumberOfProcesses
# TYPE wmi_os_processes gauge
wmi_os_processes 124
# HELP wmi_os_processes_limit OperatingSystem.MaxNumberOfProcesses
# TYPE wmi_os_processes_limit gauge
wmi_os_processes_limit 4.294967295e+09
# HELP wmi_os_time OperatingSystem.LocalDateTime
# TYPE wmi_os_time gauge
wmi_os_time 1.57804974e+09
# HELP wmi_os_timezone OperatingSystem.LocalDateTime
# TYPE wmi_os_timezone gauge
wmi_os_timezone{timezone="MSK"} 1
# HELP wmi_os_users OperatingSystem.NumberOfUsers
# TYPE wmi_os_users gauge
wmi_os_users 2
# HELP wmi_os_virtual_memory_bytes OperatingSystem.TotalVirtualMemorySize
# TYPE wmi_os_virtual_memory_bytes gauge
wmi_os_virtual_memory_bytes 5.770891264e+09
# HELP wmi_os_virtual_memory_free_bytes OperatingSystem.FreeVirtualMemory
# TYPE wmi_os_virtual_memory_free_bytes gauge
wmi_os_virtual_memory_free_bytes 3.76489984e+09
# HELP wmi_os_visible_memory_bytes OperatingSystem.TotalVisibleMemorySize
# TYPE wmi_os_visible_memory_bytes gauge
wmi_os_visible_memory_bytes 4.294496256e+09